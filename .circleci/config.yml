version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.7.0
  aws-ecs: circleci/aws-ecs@1.1.0

executors:
  container:
    working_directory: ~/working_directory
    docker:
      - image: circleci/ruby:2.5.1
        environment:
          TZ: Asia/Tokyo

jobs:
  test:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          RAILS_ENV: test
          MYSQL_HOST: 127.0.0.1
          MYSQL_USERNAME: root
          MYSQL_PASSWORD: password
          MYSQL_PORT: 3306
          MYSQL_DATABASE: 'circle_ci_test-test'
          BUNDLER_VERSION: 1.17.3
      - image: circleci/mysql:5.7.18
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: 'circle_ci_test-test'

    working_directory: ~/circle-ci-test

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y libappindicator1 fonts-liberation
            export CHROME_BIN=/usr/bin/google-chrome
            wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo dpkg -i google-chrome*.deb
            gem install bundler:1.17.3
            bundle _1.17.3_ install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      # Database setup
      - run:
          name: waiting for stating database
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      # run tests
      - run:
          name: Run rspec in parallel
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
  
  nginx-deploy:
    executor: container
    steps:
      - checkout
      - setup_remote_docker
      - aws-ecr/build-and-push-image:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          region: AWS_REGION
          create-repo: true
          repo: nginx
          account-url: AWS_ECR_ACCOUNT_URL
          dockerfile: ./docker/nginx/Dockerfile
          tag: "${CIRCLE_SHA1}"

      -  aws-ecs/update-service:
          family: '${ECS_TASK}'
          cluster-name: '${ECS_ARN}'
          service-name: '${ECS_SERVICE}'
          container-image-name-updates: "container=nginx,tag=${CIRCLE_SHA1}"

  rails-deploy:
    executor: container
    steps:
      - checkout
      - setup_remote_docker
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          region: AWS_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: true
          dockerfile: ./docker/rails/Dockerfile
          repo: rails
          tag: "${CIRCLE_SHA1}"

      - aws-ecs/update-service:
          family: '${ECS_TASK}'
          cluster-name: '${ECS_ARN}'
          service-name: '${ECS_SERVICE}'
          container-image-name-updates: "container=app,tag=${CIRCLE_SHA1}"


workflows:
  version: 2.1
  test_and_deploy:
    jobs:
      - test
      - nginx-deploy:
          requires:
            - test
          filters:
            branches:
              only: master
      - rails-deploy:
          requires:
            - test
          filters:
            branches:
              only: master
    